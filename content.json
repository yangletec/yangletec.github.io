{"meta":{"title":"AI码师","subtitle":"AI码师","description":"AI码师","author":"AI码师","url":"https://yangletec.github.io","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2021-02-26T14:08:48.183Z","updated":"2021-02-26T14:08:48.183Z","comments":false,"path":"/404.html","permalink":"https://yangletec.github.io/404.html","excerpt":"","text":""},{"title":"书单","date":"2021-02-26T14:06:04.854Z","updated":"2021-02-26T14:06:04.854Z","comments":false,"path":"books/index.html","permalink":"https://yangletec.github.io/books/index.html","excerpt":"","text":""},{"title":"关于","date":"2021-02-26T14:08:31.529Z","updated":"2021-02-26T14:08:31.529Z","comments":false,"path":"about/index.html","permalink":"https://yangletec.github.io/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"分类","date":"2021-02-26T14:08:09.940Z","updated":"2021-02-26T14:08:09.939Z","comments":false,"path":"categories/index.html","permalink":"https://yangletec.github.io/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2021-02-26T14:05:41.009Z","updated":"2021-02-26T14:05:41.009Z","comments":true,"path":"links/index.html","permalink":"https://yangletec.github.io/links/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2021-02-26T14:05:46.823Z","updated":"2021-02-26T14:05:46.823Z","comments":false,"path":"repository/index.html","permalink":"https://yangletec.github.io/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2021-02-26T14:08:17.553Z","updated":"2021-02-26T14:08:17.552Z","comments":false,"path":"tags/index.html","permalink":"https://yangletec.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"第一篇博客","slug":"yuque/第一篇博客","date":"2021-02-26T15:55:31.000Z","updated":"2021-02-26T15:55:58.915Z","comments":true,"path":"2021/02/26/yuque/第一篇博客/","link":"","permalink":"https://yangletec.github.io/2021/02/26/yuque/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"Spring Cloud GatewayPig 2.0 采用的是 spring 官方的网关组件，通过异步背压的高性能网关。路由配置是整个微服务中最为核心的功能 配置路由我们以 UPMS 的路由为例子，注意注释 123456789101112131415spring: cloud: gateway: routes: #UPMS 模块 - id: pig-upms # 唯一的服务ID uri: lb://pig-upms # 注册中心的服务名称，实现负载均衡 predicates: - Path=/admin/** #所有业务的请求前缀 filters: # 限流配置 - name: RequestRateLimiter #限流策略 args: key-resolver: &#x27;#&#123;@remoteAddrKeyResolver&#125;&#x27; redis-rate-limiter.replenishRate: 10 redis-rate-limiter.burstCapacity: 20 pig 默认提供了全局的路由过滤器原理PigRequestGlobalFilter,对全部的微服务提供了安全过滤（这个后边会讲）和全局 StripPrefix=1 配置，意味着你在使用 Pig 的时候，网关转发到业务模块时候会自动截取前缀，不用再每个微服务路由配置了 StripPrefixFilter 123456789101112131415161718192021222324252627282930public class PigRequestGlobalFilter implements GlobalFilter, Ordered &#123; private static final String HEADER_NAME = &quot;X-Forwarded-Prefix&quot;; @Override public Mono&lt;Void&gt; filter(ServerWebExchange exchange, GatewayFilterChain chain) &#123; // 1. 清洗请求头中from 参数 ServerHttpRequest request = exchange.getRequest().mutate() .headers(httpHeaders -&gt; httpHeaders.remove(SecurityConstants.FROM)) .build(); // 2. 重写StripPrefix addOriginalRequestUrl(exchange, request.getURI()); String rawPath = request.getURI().getRawPath(); String newPath = &quot;/&quot; + Arrays.stream(StringUtils.tokenizeToStringArray(rawPath, &quot;/&quot;)) .skip(1L).collect(Collectors.joining(&quot;/&quot;)); ServerHttpRequest newRequest = request.mutate() .path(newPath) .build(); exchange.getAttributes().put(GATEWAY_REQUEST_URL_ATTR, newRequest.getURI()); return chain.filter(exchange.mutate() .request(newRequest.mutate() .build()).build()); &#125; @Override public int getOrder() &#123; return -1000; &#125;&#125;","categories":[],"tags":[]},{"title":"dsfgsdfgsdf","slug":"yuque/dsfgsdfgsdf","date":"2021-02-26T15:29:44.000Z","updated":"2021-02-26T15:55:58.853Z","comments":true,"path":"2021/02/26/yuque/dsfgsdfgsdf/","link":"","permalink":"https://yangletec.github.io/2021/02/26/yuque/dsfgsdfgsdf/","excerpt":"","text":"dsfgdfsgdsfgfdsgffdsg","categories":[],"tags":[]},{"title":"# 测试文档自动发布fsfsfdsdf","slug":"yuque/# 测试文档自动发布fsfsfdsdf","date":"2021-02-26T15:22:52.000Z","updated":"2021-02-26T15:55:58.859Z","comments":true,"path":"2021/02/26/yuque/# 测试文档自动发布fsfsfdsdf/","link":"","permalink":"https://yangletec.github.io/2021/02/26/yuque/#%20%E6%B5%8B%E8%AF%95%E6%96%87%E6%A1%A3%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83fsfsfdsdf/","excerpt":"","text":"大法","categories":[],"tags":[]},{"title":"博客第1期","slug":"yuque/博客第1期","date":"2021-02-26T15:04:21.000Z","updated":"2021-02-26T15:55:58.887Z","comments":true,"path":"2021/02/26/yuque/博客第1期/","link":"","permalink":"https://yangletec.github.io/2021/02/26/yuque/%E5%8D%9A%E5%AE%A2%E7%AC%AC1%E6%9C%9F/","excerpt":"","text":"该博客模版案例来自 @蚂蚁金服体验技术部 插入带链接的标题（ctrl+K）Best Year in Music这幅可视化作品展示了 1960 年以来，Billboard 历年榜单的前五名音乐的变化情况，效果呈现设计感十足，还可以在聆听音乐的同时回顾音乐的变迁史。插入图片，点击图片，设置图片大小值得一提的是，作者正是大名鼎鼎的数据新闻站点 The Pudding。作为可视化新闻媒体中的姣姣者，The Pudding 擅长对那些兼具信息量和娱乐度的争议性话题进行可视化呈现，来使得复杂的观点变得更容易被公众理解。该团队虽然仅由数名全职记者和工程师组成，但战斗力强悍，目前已有数十个大型的数据可视化作品。输入作者 @诸岳(dengfuping) Road Suffixes in the USA美国道路命名多种多样，例如著名的纽约第五大道（Fifth Avenue），又或者凤凰城（Phoenix）的 Washington Street，Thomas Road，Union Hill Drive 等。不同的道路，有不同的叫法，Avenue, Street, Road, Drive 等等。想了解更多关于美国道路命名可以参考这篇文章。作者用 R 语言统计了美国每个县的每种道路后缀（例如 Avenue）的总里程，并把每个县总里程最大的道路后缀通过颜色映射到地图上。可以看出美国大部分县的道路都是以 Rd(Road 的缩写)结尾的。插入图片，点击图片，设置图片大小 另外还以柱状图的方式展示了每种道路后缀的总里程（英里）：by @长哲(changzhe) 「加餐」Hello World 图可视化图可视化是信息可视化的子领域，它通过展示元素、关系，帮助用户获取数据的洞悉能力。它已被广泛地应用在流程图、社交网络、英特网、蛋白质网络等关系数据的呈现。本文由 AntV 团队 @十吾(shiwu-5wap2) 👆 撰写，参考自[1][2]两篇图可视化学术论文，简要介绍图可视化的历史、背景、机遇与挑战。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2021-02-26T13:56:14.695Z","updated":"2021-02-26T13:56:14.695Z","comments":true,"path":"2021/02/26/hello-world/","link":"","permalink":"https://yangletec.github.io/2021/02/26/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}